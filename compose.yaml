services:
  postgresdb:
    image: postgres:latest
    env_file:
      - ./backend/.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

  adminer:
    image: adminer:latest
    container_name: adminer
    restart: always
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgresdb
      ADMINER_DEFAULT_DRIVER: pgsql

  backend:
    env_file:
      - ./backend/.env
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - postgresdb
    restart: always

  frontend:
    env_file:
      - ./frontend/.env
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    depends_on:
      - backend
    restart: always

  init-nginxproxymanager:
    image: alpine:latest
    restart: unless-stopped # Run once unless manually stopped
    command:
      [
        "sh",
        "-c",
        "apk add --no-cache bash && if [ ! -d '/opt/nginxproxymanager' ]; then mkdir -p /opt/nginxproxymanager; fi && if [ ! -f '/opt/nginxproxymanager/db.sqlite' ]; then touch /opt/nginxproxymanager/db.sqlite; fi"
      ]

  nginxproxymanager:
    image: "jc21/nginx-proxy-manager:latest"
    restart: always
    depends_on:
      - init-nginxproxymanager
    ports:
      - "80:80" # Public HTTP Port
      - "443:443" # Public HTTPS Port
      - "8090:81" # Admin Web Port
    environment:
      DB_SQLITE_FILE: "/opt/nginxproxymanager/db.sqlite"
    volumes:
      - /opt/nginxproxymanager:/opt/nginxproxymanager
      - /opt/nginxproxymanager/letsencrypt:/etc/letsencrypt

volumes:
  postgres_data:
